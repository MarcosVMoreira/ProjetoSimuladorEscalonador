/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerAdicaoProcessos;
import Model.ModelProcesso;
import java.util.LinkedList;
import java.util.Random;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author root
 */
public class ViewAdicaoProcessos extends javax.swing.JFrame {

    private ModelProcesso modelProcesso;
    private LinkedList<ModelProcesso> listaProcesso;
    private ControllerAdicaoProcessos controllerAdicaoProcessos;
    private int contador;
    private ViewEscalonador viewEscalonador;
    private Random gerador = new Random();
    
    public ViewAdicaoProcessos() {
        initComponents();
        setLocationRelativeTo(null);

        contador = 1;
        modelProcesso = new ModelProcesso();
        listaProcesso = new LinkedList<>();
        controllerAdicaoProcessos = new ControllerAdicaoProcessos(listaProcesso);

        ButtonGroup myButtonGroup = new ButtonGroup();
        myButtonGroup.add(rdBtnCPU);
        myButtonGroup.add(rdBtnES);
        controllerAdicaoProcessos = new ControllerAdicaoProcessos(listaProcesso);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        rdBtnCPU = new javax.swing.JRadioButton();
        rdBtnES = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        txtTempoExecucao = new javax.swing.JTextField();
        btnRemover = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnGeraLista = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTabela = new javax.swing.JTable();
        btnIniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adição de processos");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rdBtnCPU.setSelected(true);
        rdBtnCPU.setText("Orientado a CPU");

        rdBtnES.setText("Orientado a E/S");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel1.setText("Criação de Processos");

        jLabel2.setText("Tempo de execução:");

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo de processo:");

        btnGeraLista.setText("Gerar lista aleatória");
        btnGeraLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeraListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(rdBtnCPU)
                    .addComponent(rdBtnES)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnGeraLista, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnAdicionar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRemover)))
                    .addComponent(txtTempoExecucao, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTempoExecucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(rdBtnCPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdBtnES)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGeraLista)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel4.setText("Tabela de Processos");

        tbTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane1.setViewportView(tbTabela);

        btnIniciar.setText("Iniciar escalonador");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnIniciar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIniciar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        modelProcesso = new ModelProcesso();

        modelProcesso.setNumeroProcesso(contador);
        modelProcesso.setTempoExecucao(Integer.parseInt(txtTempoExecucao.getText()));

        //Se tipoProcesso for false, é do CPU. Se for true, é I/O
        if (rdBtnCPU.isSelected()) {
            modelProcesso.setTipoProcesso(false);
        } else if (rdBtnES.isSelected()) {
            modelProcesso.setTipoProcesso(true);
        }

        controllerAdicaoProcessos.adicionaNaListaController(modelProcesso);

        System.out.println("\nAdicionado: ");

        for (int i = 0; i < listaProcesso.size(); i++) {
            System.out.println("\n");
            System.out.println(listaProcesso.get(i).getNumeroProcesso());
            System.out.println(listaProcesso.get(i).isTipoProcesso());
            System.out.println(listaProcesso.get(i).getTempoExecucao());
        }

        addRowToJTable();

        contador++;
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        viewEscalonador = new ViewEscalonador(listaProcesso);

    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if(tbTabela.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null, "Selecione um processo para remover", "ERRO", JOptionPane.WARNING_MESSAGE);
        else
        {
            System.out.println("Removendo posicao " + (tbTabela.getSelectedRow() + 1) + " da lista");

            for (int i = 0; i < listaProcesso.size(); i++) {
                System.out.println("\n");
                System.out.println(listaProcesso.get(i).getNumeroProcesso());
                System.out.println(listaProcesso.get(i).isTipoProcesso());
                System.out.println(listaProcesso.get(i).getTempoExecucao());
            }

            listaProcesso.remove(tbTabela.getSelectedRow());
            addRowToJTable();
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnGeraListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeraListaActionPerformed
        for(int j = 0; j < 6; j++)
        {
            modelProcesso = new ModelProcesso();
            int aux = gerador.nextInt(26) + 1;
            modelProcesso.setNumeroProcesso(contador);
            modelProcesso.setTempoExecucao(aux);
            if(aux%2 == 0)
                modelProcesso.setTipoProcesso(false);
            else
                modelProcesso.setTipoProcesso(true);
            controllerAdicaoProcessos.adicionaNaListaController(modelProcesso);
            contador++;
            addRowToJTable();
        }
        
        for (int i = 0; i < listaProcesso.size(); i++)
        {
            System.out.println("\n");
            System.out.println(listaProcesso.get(i).getNumeroProcesso());
            System.out.println(listaProcesso.get(i).isTipoProcesso());
            System.out.println(listaProcesso.get(i).getTempoExecucao());
        }
    }//GEN-LAST:event_btnGeraListaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAdicaoProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAdicaoProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAdicaoProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAdicaoProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewAdicaoProcessos().setVisible(true);
            }
        });

    }

    public void addRowToJTable() {
        clearTable(tbTabela);
        DefaultTableModel model = (DefaultTableModel) tbTabela.getModel();
        Object rowData[] = new Object[4];
        for (int i = 0; i < listaProcesso.size(); i++) {
            rowData[0] = listaProcesso.get(i).getNumeroProcesso();
            if (listaProcesso.get(i).isTipoProcesso()) {
                rowData[1] = "I/O";
            } else {
                rowData[1] = "CPU";
            }
            rowData[2] = listaProcesso.get(i).getTempoExecucao();
            model.addRow(rowData);
        }
    }

    public void clearTable(JTable tabela) {
        tbTabela = tabela;
        tbTabela.setModel(new DefaultTableModel(null, new String[]{"Nº do processo", "Tipo de processo", "Tempo de execução"}));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnGeraLista;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdBtnCPU;
    private javax.swing.JRadioButton rdBtnES;
    private javax.swing.JTable tbTabela;
    private javax.swing.JTextField txtTempoExecucao;
    // End of variables declaration//GEN-END:variables
}
