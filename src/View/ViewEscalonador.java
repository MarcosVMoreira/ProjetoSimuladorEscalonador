/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.ModelProcesso;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author root
 */
public class ViewEscalonador extends javax.swing.JFrame {

    /**
     * Creates new form ViewEscalonador
     */
    private LinkedList<ModelProcesso> listaPrincipal;

    private LinkedList<ModelProcesso> lista1;
    private LinkedList<ModelProcesso> lista2 = new LinkedList<>();
    private LinkedList<ModelProcesso> lista3 = new LinkedList<>();
    private LinkedList<ModelProcesso> lista4 = new LinkedList<>();
    private LinkedList<ModelProcesso> lista5 = new LinkedList<>();
    private LinkedList<ModelProcesso> lista6 = new LinkedList<>();
    private LinkedList<ModelProcesso> lista7 = new LinkedList<>();
    private LinkedList<ModelProcesso> lista8 = new LinkedList<>();

    int contaLista1 = 0, contaLista2 = 0, contaLista3 = 0, contaLista4 = 0, contaLista5 = 0, contaLista6 = 0, contaLista7 = 0, contaLista8 = 0;

    boolean fim = false;

    public ViewEscalonador() {
        initComponents();
    }

    public ViewEscalonador(LinkedList<ModelProcesso> lista) {
        listaPrincipal = new LinkedList<ModelProcesso>();
        listaPrincipal = lista;
        initComponents();

        addRowToJTable(tbFila1, listaPrincipal);
        lista1 = new LinkedList<>(listaPrincipal);

        /* processos na fila 1 executam por 2 quantums. Na fila 2, por 4 quantums. Na 3, por 8 quantums, etc. */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFila1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbFila2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbFila3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbFila4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbFila5 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbFila6 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbFila7 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbFila8 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbFIlaIO = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btnGerarQuantum = new javax.swing.JButton();
        btnAutomatico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Escalonador");

        jLabel1.setText("Fila 1");

        jLabel2.setText("Fila 2");

        jLabel3.setText("Fila 3");

        jLabel4.setText("Fila 4");

        jLabel5.setText("Fila 5");

        jLabel6.setText("Fila 6");

        jLabel7.setText("Fila 7");

        tbFila1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane1.setViewportView(tbFila1);

        tbFila2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane2.setViewportView(tbFila2);

        tbFila3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº de processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane3.setViewportView(tbFila3);

        tbFila4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane4.setViewportView(tbFila4);

        tbFila5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane5.setViewportView(tbFila5);

        tbFila6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane6.setViewportView(tbFila6);

        tbFila7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane7.setViewportView(tbFila7);

        jLabel8.setText("Fila 8");

        tbFila8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane8.setViewportView(tbFila8);

        tbFIlaIO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº do processo", "Tipo de processo", "Tempo de execução"
            }
        ));
        jScrollPane9.setViewportView(tbFIlaIO);

        jLabel9.setText("Fila de I/O");

        btnGerarQuantum.setText("Gerar quantum");
        btnGerarQuantum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarQuantumActionPerformed(evt);
            }
        });

        btnAutomatico.setText("Quantum automático");
        btnAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutomaticoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jLabel1)
                        .addGap(389, 389, 389)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(386, 386, 386)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(390, 390, 390)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)
                                        .addGap(170, 170, 170))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(189, 189, 189)
                                        .addComponent(jLabel4)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addComponent(btnGerarQuantum)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnAutomatico))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(197, 197, 197)
                                        .addComponent(jLabel8)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGerarQuantum)
                        .addComponent(btnAutomatico)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarQuantumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarQuantumActionPerformed
        // TODO add your handling code here:
        ciclaInstrucao();
    }//GEN-LAST:event_btnGerarQuantumActionPerformed

    private void btnAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutomaticoActionPerformed
        // TODO add your handling code here:
        while (!fim) {
            System.out.println("entrei");
            try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                Logger.getLogger(ViewEscalonador.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
//        Thread t1 = new Thread() {
//            public void run() {
//                for (int i = 0; i < maximo && flag; i++) {
//                    for (int j = 0; j < maximo; j++) {
//                        Math.sqrt(i * j);
//                        Math.sqrt(j * i);
//                    }
//                    pgbBarra.setValue(i);
//                }
//                pgbBarra.setValue(maximo);
//            }
//        };
//
//        t1.start();
        
        fim = false;
    }//GEN-LAST:event_btnAutomaticoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEscalonador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEscalonador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEscalonador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEscalonador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewEscalonador().setVisible(true);
            }
        });

    }

    public void addRowToJTable(JTable tabela, LinkedList<ModelProcesso> lista) {

        clearTable(tabela);
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        Object rowData[] = new Object[4];
        for (int i = 0; i < lista.size(); i++) {
            rowData[0] = lista.get(i).getNumeroProcesso();
            rowData[1] = lista.get(i).isTipoProcesso();
            rowData[2] = lista.get(i).getTempoExecucao();
            model.addRow(rowData);
        }
    }

    public void clearTable(JTable tabela) {
        tabela.setModel(new DefaultTableModel(null, new String[]{"Nº do processo", "Tipo de processo", "Tempo de execução"}));
    }

    public void ciclaInstrucao() {

        /* logica: terei 8 listas, uma para cada fila. Sempre que eu ciclar e acabar o tempo numa lista, eu puxo o elemento pra proxima lista e reduzo o time dele se tvier time >0 */
 /* ficarei plotando as 8 listas nas 8 taberlas sempre */
        if (lista1.size() > 0) {

            contaLista1++;

            lista1.get(0).setTempoExecucao(lista1.get(0).getTempoExecucao() - 1);

            if (lista1.get(0).getTempoExecucao() <= 0) {
                contaLista2 = 0;
                lista1.remove(0);
            }

            if (contaLista1 == 2) {
                contaLista1 = 0;
                lista2.add(lista1.get(0));
                lista1.remove(0);
            }

        } else if (lista2.size() > 0) {

            contaLista2++;

            lista2.get(0).setTempoExecucao(lista2.get(0).getTempoExecucao() - 1);

            if (lista2.get(0).getTempoExecucao() <= 0) {
                contaLista2 = 0;
                lista2.remove(0);

            }

            if (contaLista2 == 4) {
                contaLista2 = 0;
                lista3.add(lista2.get(0));
                lista2.remove(0);
            }
        } else if (lista3.size() > 0) {

            contaLista3++;

            lista3.get(0).setTempoExecucao(lista3.get(0).getTempoExecucao() - 1);

            if (lista3.get(0).getTempoExecucao() <= 0) {
                contaLista3 = 0;
                lista3.remove(0);
            }

            if (contaLista3 == 8) {
                contaLista3 = 0;
                lista4.add(lista3.get(0));
                lista3.remove(0);
            }
        } else if (lista4.size() > 0) {

            contaLista4++;

            lista4.get(0).setTempoExecucao(lista4.get(0).getTempoExecucao() - 1);

            if (lista4.get(0).getTempoExecucao() <= 0) {
                contaLista3 = 0;
                lista4.remove(0);
            }

            if (contaLista4 == 16) {
                contaLista4 = 0;
                lista5.add(lista4.get(0));
                lista4.remove(0);
            }
        } else if (lista5.size() > 0) {

            contaLista5++;

            lista5.get(0).setTempoExecucao(lista5.get(0).getTempoExecucao() - 1);

            if (lista5.get(0).getTempoExecucao() <= 0) {
                contaLista5 = 0;
                lista5.remove(0);
            }

            if (contaLista5 == 32) {
                contaLista5 = 0;
                lista6.add(lista5.get(0));
                lista5.remove(0);
            }
        } else if (lista6.size() > 0) {

            contaLista6++;

            lista6.get(0).setTempoExecucao(lista6.get(0).getTempoExecucao() - 1);

            if (lista6.get(0).getTempoExecucao() <= 0) {
                contaLista6 = 0;
                lista6.remove(0);
            }

            if (contaLista6 == 64) {
                contaLista6 = 0;
                lista7.add(lista6.get(0));
                lista6.remove(0);
            }
        } else if (lista7.size() > 0) {

            contaLista7++;

            lista7.get(0).setTempoExecucao(lista7.get(0).getTempoExecucao() - 1);

            if (lista7.get(0).getTempoExecucao() <= 0) {
                contaLista7 = 0;
                lista7.remove(0);
            }

            if (contaLista7 == 128) {
                contaLista7 = 0;
                lista8.add(lista7.get(0));
                lista7.remove(0);
            }
        } else if (lista8.size() > 0) {

            contaLista8++;

            lista8.get(0).setTempoExecucao(lista8.get(0).getTempoExecucao() - 1);

            if (lista8.get(0).getTempoExecucao() <= 0) {
                contaLista8 = 0;
                lista8.remove(0);
            }

            if (contaLista8 == 256) {
                contaLista8 = 0;
                lista8.remove(0);
            }

            if (lista8.size() == 0) {
                fim = true;
                JOptionPane.showMessageDialog(null, "Todos os processos foram computados. Fim do escalonador.");
            }
        }

        addRowToJTable(tbFila1, lista1);
        addRowToJTable(tbFila2, lista2);
        addRowToJTable(tbFila3, lista3);
        addRowToJTable(tbFila4, lista4);
        addRowToJTable(tbFila5, lista5);
        addRowToJTable(tbFila6, lista6);
        addRowToJTable(tbFila7, lista7);
        addRowToJTable(tbFila8, lista8);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutomatico;
    private javax.swing.JButton btnGerarQuantum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable tbFIlaIO;
    private javax.swing.JTable tbFila1;
    private javax.swing.JTable tbFila2;
    private javax.swing.JTable tbFila3;
    private javax.swing.JTable tbFila4;
    private javax.swing.JTable tbFila5;
    private javax.swing.JTable tbFila6;
    private javax.swing.JTable tbFila7;
    private javax.swing.JTable tbFila8;
    // End of variables declaration//GEN-END:variables
}
